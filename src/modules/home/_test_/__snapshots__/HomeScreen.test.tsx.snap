// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`HomeScreen renders correctly 1`] = `
<View
  style={
    {
      "backgroundColor": "#141831",
      "flex": 1,
    }
  }
>
  <RCTSafeAreaView />
  <View
    style={
      {
        "backgroundColor": "#141831",
        "padding": 30,
      }
    }
  >
    <View
      style={
        {
          "alignItems": "center",
          "flexDirection": "row",
          "justifyContent": "space-between",
        }
      }
    >
      <Image
        resizeMode="contain"
        source={
          {
            "testUri": "../../../src/assets/images/Logo.png",
          }
        }
        style={
          {
            "height": 72.28571428571428,
            "width": 88,
          }
        }
      />
      <Text
        style={
          {
            "color": "#FFFFFF",
            "fontSize": 27,
            "fontWeight": "600",
          }
        }
      >
        Today News
      </Text>
      <View
        accessibilityState={
          {
            "busy": undefined,
            "checked": undefined,
            "disabled": undefined,
            "expanded": undefined,
            "selected": undefined,
          }
        }
        accessibilityValue={
          {
            "max": undefined,
            "min": undefined,
            "now": undefined,
            "text": undefined,
          }
        }
        accessible={true}
        collapsable={false}
        focusable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          {
            "opacity": 1,
          }
        }
      >
        <Image
          source={
            {
              "testUri": "../../../src/assets/images/search.png",
            }
          }
          style={
            {
              "height": 39.42857142857143,
              "width": 48,
            }
          }
        />
      </View>
    </View>
    <View
      style={{}}
    >
      <RCTScrollView
        applyWindowCorrection={[Function]}
        canChangeSize={true}
        contentContainerStyle={
          {
            "backgroundColor": undefined,
            "minHeight": 1,
            "minWidth": 1,
            "paddingBottom": 0,
            "paddingTop": 0,
          }
        }
        contentHeight={0}
        contentWidth={0}
        data={
          [
            "All",
            "health",
            "sports",
            "science",
            "business",
            "technology",
            "entertainment",
          ]
        }
        dataProvider={
          DataProvider {
            "_data": [
              "All",
              "health",
              "sports",
              "science",
              "business",
              "technology",
              "entertainment",
            ],
            "_firstIndexToProcess": 0,
            "_hasStableIds": false,
            "_requiresDataChangeHandling": false,
            "_size": 7,
            "getStableId": [Function],
            "rowHasChanged": [Function],
          }
        }
        disableRecycling={false}
        extendedState={{}}
        externalScrollView={[Function]}
        finalRenderAheadOffset={250}
        forceNonDeterministicRendering={true}
        horizontal={true}
        initialOffset={0}
        initialRenderIndex={0}
        isHorizontal={true}
        layoutProvider={
          GridLayoutProviderWithProps {
            "_acceptableRelayoutDelta": 1,
            "_getHeightOrWidth": [Function],
            "_getLayoutTypeForIndex": [Function],
            "_getSpan": [Function],
            "_hasExpired": false,
            "_maxSpan": 1,
            "_setLayoutForType": [Function],
            "_tempDim": {
              "height": 0,
              "width": 0,
            },
            "averageWindow": AverageWindow {
              "currentAverage": 100,
              "currentCount": 1,
              "inputValues": [
                100,
              ],
              "nextIndex": 1,
            },
            "defaultEstimatedItemSize": 100,
            "layoutObject": {
              "size": undefined,
              "span": undefined,
            },
            "props": {
              "data": [
                "All",
                "health",
                "sports",
                "science",
                "business",
                "technology",
                "entertainment",
              ],
              "horizontal": true,
              "numColumns": 1,
              "renderItem": [Function],
              "showsHorizontalScrollIndicator": false,
            },
            "renderWindowInsets": {
              "height": 0,
              "width": 0,
            },
            "shouldRefreshWithAnchoring": true,
          }
        }
        maxRenderAhead={750}
        numColumns={1}
        onEndReached={[Function]}
        onEndReachedThreshold={0}
        onEndReachedThresholdRelative={0}
        onItemLayout={[Function]}
        onLayout={[Function]}
        onScroll={[Function]}
        onScrollBeginDrag={[Function]}
        onSizeChanged={[Function]}
        onVisibleIndicesChanged={[Function]}
        removeClippedSubviews={false}
        renderAheadOffset={0}
        renderAheadStep={250}
        renderContentContainer={[Function]}
        renderItem={[Function]}
        renderItemContainer={[Function]}
        rowRenderer={[Function]}
        scrollEventThrottle={16}
        scrollThrottle={16}
        scrollViewProps={
          {
            "contentContainerStyle": {
              "backgroundColor": undefined,
              "minHeight": 1,
              "minWidth": 1,
              "paddingBottom": 0,
              "paddingTop": 0,
            },
            "onLayout": [Function],
            "onScrollBeginDrag": [Function],
            "refreshControl": undefined,
            "style": {
              "minHeight": 1,
              "minWidth": 1,
            },
          }
        }
        showsHorizontalScrollIndicator={false}
        style={
          {
            "minHeight": 1,
            "minWidth": 1,
          }
        }
        suppressBoundedSizeException={true}
        windowCorrectionConfig={
          {
            "applyToInitialOffset": true,
            "applyToItemScroll": true,
            "value": {
              "endCorrection": 0,
              "startCorrection": 0,
              "windowShift": -0,
            },
          }
        }
      >
        <View>
          <View
            style={
              {
                "flexDirection": "row",
              }
            }
          >
            <AutoLayoutView
              enableInstrumentation={false}
              horizontal={true}
              onBlankAreaEvent={[Function]}
              onLayout={[Function]}
              renderAheadOffset={0}
              scrollOffset={0}
              style={
                {
                  "height": 0,
                  "width": 0,
                }
              }
              windowSize={0}
            />
            <View
              pointerEvents="none"
              style={
                {
                  "opacity": 0,
                }
              }
            >
              <View
                accessibilityState={
                  {
                    "busy": undefined,
                    "checked": undefined,
                    "disabled": undefined,
                    "expanded": undefined,
                    "selected": undefined,
                  }
                }
                accessibilityValue={
                  {
                    "max": undefined,
                    "min": undefined,
                    "now": undefined,
                    "text": undefined,
                  }
                }
                accessible={true}
                collapsable={false}
                focusable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  {
                    "backgroundColor": "#3D3970",
                    "borderRadius": 30,
                    "borderWidth": 1.5,
                    "marginHorizontal": 16,
                    "marginTop": 19.714285714285715,
                    "opacity": 1,
                    "padding": 22.5,
                  }
                }
              >
                <Text
                  style={
                    {
                      "color": "#FFFFFF",
                      "fontSize": 22.5,
                    }
                  }
                >
                  health
                </Text>
              </View>
            </View>
          </View>
        </View>
      </RCTScrollView>
    </View>
  </View>
  <View
    style={
      {
        "backgroundColor": "#FFFFFF",
        "borderTopLeftRadius": 54,
        "borderTopRightRadius": 54,
        "flex": 1,
        "padding": 30,
      }
    }
  >
    <ActivityIndicator
      size="large"
      style={
        {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        }
      }
    />
  </View>
</View>
`;
